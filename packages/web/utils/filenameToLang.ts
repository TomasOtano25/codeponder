const extensions: { [key: string]: string } = {
  py: "python",
  rb: "ruby",

  sh: "bash",
  bat: "batch",
  tex: "latex",
  gyp: "python",
  wsgi: "python",
  jsp: "java",
  rss: "xml",
  atom: "xml",
  xsl: "xml",
  plist: "xml",
  builder: "ruby",
  gemspec: "ruby",
  podspec: "ruby",
  thor: "ruby",
  diff: "patch",
  zsh: "bash",
  st: "smalltalk",
  as: "actionscript",
  apacheconf: "apache",
  osacript: "applescript",
  "cmake.in": "cmake",
  jinja: "django",
  cmd: "batch",
  "html.hbs": "handlebars",
  "html.handlebars": "handlebars",
  nginxconf: "nginx",
  m: "objectivec",
  mm: "objectivec",
  rs: "rust",
  sci: "scilab",
  vb: "vbnet",
  vbs: "vbscript",
  ts: "typescript",
  yml: "yaml",
  ino: "arduino",
  // C#
  cs: "csharp",
  cake: "csharp",
  cshtml: "csharp",
  csx: "csharp",
  // AspNet
  asp: "aspnet",
  asax: "aspnet",
  ascx: "aspnet",
  ashx: "aspnet",
  asmx: "aspnet",
  aspx: "aspnet",
  axd: "aspnet",
  // Ada
  adb: "ada",
  ada: "ada",
  ads: "ada",
  // Apacheconf
  vhost: "apacheconf",
  // AppleScript
  scpt: "applescript",
  // AsciiDoc
  adoc: "asciidoc",
  asc: "asciidoc",
  // AutoHotkey
  ahk: "autohotkey",
  ahkl: "autohotkey",
  // AutoIt
  au3: "autoit",
  // Brainfuck
  b: "brainfuck",
  bf: "brainfuck",
  // C
  h: "c",
  cats: "c",
  idc: "c",
  w: "c",
  // CPP
  cc: "cpp",
  cp: "cpp",
  cxx: "cpp",
  hxx: "cpp",
  inc: "cpp",
  inl: "cpp",
  ipp: "cpp",
  tcc: "cpp",
  tpp: "cpp",
  "c++": "cpp",
  "h++": "cpp",
  hh: "cpp",
  hpp: "cpp",
  // Clojure
  clj: "clojure",
  boot: "clojure",
  cl2: "clojure",
  cljc: "clojure",
  cljs: "clojure",
  "cljs.hl": "clojure",
  cljscm: "clojure",
  cljx: "clojure",
  hic: "clojure",
  // CoffeeScript
  coffee: "coffeescript",
  _coffee: "coffeescript",
  cson: "coffescript",
  iced: "coffescript",
  cjsx: "coffescript",
  // Crystal
  cr: "crystal",
  // D
  di: "d",
  // Diff
  patch: "diff",
  // Docker
  dockerfile: "docker",
  // Eiffel
  e: "eiffel",
  // Elixir
  ex: "elixir",
  exs: "elixir",
  // Erlang
  erl: "erlang",
  es: "erlang",
  escript: "erlang",
  hrl: "erlang",
  xrl: "erlang",
  yrl: "erlang",
  // FSharp
  fs: "fsharp",
  fsi: "fsharp",
  fsx: "fsharp",
  // FORTRAN
  f90: "fortran",
  f: "fortran",
  f03: "fortran",
  f08: "fortran",
  f77: "fortran",
  f95: "fortran",
  for: "fortran",
  fpp: "fortran",
  // Groovy
  grt: "groovy",
  gtpl: "groovy",
  gvy: "groovy",
  // HTML
  htm: "html",
  "html.hl": "html",
  //st: "html",
  ht: "html",
  xhtml: "html",

  // HTML+Django
  // ".mustache",
  // ".jinja"
  // HTML+PHP
  //".phtml",

  // Haml
  ".haml.deface": "haml",
  // Handlebars
  hbs: "handlebars",
  // Haskell
  hs: "haskell",
  hsc: "haskell",
  icl: "haskell",
  // Haxe
  hx: "haxe",
  hxsl: "hake",
  // Ini
  cfg: "ini",
  prefs: "ini",
  pro: "ini",
  properties: "ini",
  // J
  ijs: "j",
  // Json
  geojson: "json",
  lock: "json",
  topojson: "json",
  sublime_metrics: "json",
  sublime_session: "json",
  "sublime-keymap": "json",
  "sublime-mousemap": "json",
  "sublime-project": "json",
  "sublime-settings": "json",
  "sublime-workspace": "json",
  "sublime-build": "json",
  "sublime-commands": "json",
  "sublime-completions": "json",
  "sublime-macro": "json",
  "sublime-menu": "json",
  "sublime-theme": "json",
  // Javascript
  js: "javascript",
  _js: "javascript",
  bones: "javascript",
  es6: "javascript",
  frag: "javascript",
  gs: "javascript",
  jake: "javascript",
  jsb: "javascript",
  jscad: "javascript",
  jsfl: "javascript",
  jsm: "javascript",
  jss: "javascript",
  njs: "javascript",
  pac: "javascript",
  sjs: "javascript",
  ssjs: "javascript",
  xsjs: "javascript",
  xsjslib: "javascript",
  // Julia
  jl: "julia",
  // Kotlin
  kt: "kotlin",
  ktm: "kotlin",
  kts: "kotlin",
  // Livescript
  ls: "livescript",
  _ls: "livescript",
  // Lua
  fcgi: "lua",
  nse: "lua",
  pd_lua: "lua",
  rbxs: "lua",
  wlua: "lua",
  //Makefile
  mak: "makefile",
  d: "makefile",
  mk: "makefile",
  mkfile: "makefile",
  // Markdown
  md: "markdown",
  mkd: "markdown",
  mkdn: "markdown",
  mkdown: "markdown",
  ron: "markdown",

  // nginxconf: "nginx",
  // vhost: "nginx",

  // Nim
  nimrod: "nim",
  // OCaml
  ml: "ocaml",
  eliom: "ocaml",
  eliomi: "ocaml",
  ml4: "ocaml",
  mli: "ocaml",
  mll: "ocaml",
  mly: "ocaml",
  // OpenCL
  cl: "opencl",
  // PHP
  aw: "php",
  ctp: "php",
  // fcgi: "php",
  // inc: "php",
  php3: "php",
  php4: "php",
  php5: "php",
  php6: "php",
  phps: "php",
  phpt: "php",
  // PLSQL
  pls: "plsql",
  pck: "plsql",
  pkb: "plsql",
  pks: "plsql",
  plb: "plsql",
  plsql: "plsql",
  sql: "plsql",
  // Pascal
  pas: "pascal",
  dfm: "pascal",
  dpr: "pascal",
  //  inc: "pascal",
  lpr: "pascal",
  pp: "pascal",
  // Perl
  pl: "perl",
  al: "perl",
  cgi: "perl",
  // fcgi: "perl",
  perl: "perl",
  ph: "perl",
  plx: "perl",
  pm: "perl",
  pod: "perl",
  psgi: "perl",
  t: "perl",
  // Perl 6 - poner a revision
  "6pl": "perl",
  "6pm": "perl",
  nqp: "perl",
  p6: "perl",
  p6l: "perl",
  p6m: "perl",
  pl6: "perl",
  pm6: "perl",
  // Powershell
  ps1: "powershell",
  psd1: "powershell",
  psm1: "powershell",
  pde: "processing",
  // Prolog
  // pl: "prolog",
  // pro: "prolog",
  yap: "prolog"
};

export const filenameToLang = (filename: string) => {
  const lfn = filename.toLowerCase();
  const extension = (lfn.match(/\.(\w+)$/) || [, ""])[1];
  console.log(extension);
  if (extension) {
    console.log(extensions[extension] || extension);
    return extensions[extension] || extension;
  }
  console.log(lfn);
  return lfn;
};
